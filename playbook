---
- name: Create VPC with Public and Private Subnets, NAT Gateway, and Bastion Host
  hosts: localhost
  gather_facts: no
  vars:
    region: us-east-1
    vpc_cidr: "172.16.0.0/16"
    public_subnets_az1:
      - cidr: "172.16.0.0/24"
      - cidr: "172.16.1.0/24"
      - cidr: "172.16.2.0/24"
    public_subnets_az2:
      - cidr: "172.16.0.0/24"
      - cidr: "172.16.1.0/24"
      - cidr: "172.16.2.0/24"
    private_subnets_az1:
      - cidr: "172.16.0.0/24"
      - cidr: "172.16.1.0/24"
      - cidr: "172.16.2.0/24"
    private_subnets_az2:
      - cidr: "172.16.0.0/24"
      - cidr: "172.16.1.0/24"
      - cidr: "172.16.2.0/24"

  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        name: my_vpc
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        state: present
        dns_support: true
        dns_hostnames: true
        tenancy: default
      register: vpc

    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        state: present
      register: igw

    - name: Create Public Subnets in AZ1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ region }}a"
        map_public: true
        state: present
      loop: "{{ public_subnets_az1 }}"
      register: public_subnet_az1

    - name: Create Public Subnets in AZ2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ region }}b"
        map_public: true
        state: present
      loop: "{{ public_subnets_az2 }}"
      register: public_subnet_az2

    - name: Create Private Subnets in AZ1
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ region }}a"
        map_public: false
        state: present
      loop: "{{ private_subnets_az1 }}"
      register: private_subnet_az1

    - name: Create Private Subnets in AZ2
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ item.cidr }}"
        az: "{{ region }}b"
        map_public: false
        state: present
      loop: "{{ private_subnets_az2 }}"
      register: private_subnet_az2

    - name: Create NAT Gateway for Private Subnets in AZ1
      amazon.aws.ec2_vpc_nat_gateway:
        subnet_id: "{{ public_subnet_az1.results[0].subnet.id }}"
        region: "{{ region }}"
        state: present
      register: nat_gw_az1

    - name: Create NAT Gateway for Private Subnets in AZ2
      amazon.aws.ec2_vpc_nat_gateway:
        subnet_id: "{{ public_subnet_az2.results[0].subnet.id }}"
        region: "{{ region }}"
        state: present
      register: nat_gw_az2

    - name: Create Route Table for Public Subnets
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        associations:
          - subnet_id: "{{ public_subnet_az1.results[0].subnet.id }}"
          - subnet_id: "{{ public_subnet_az2.results[0].subnet.id }}"

    - name: Create Route Table for Private Subnets in AZ1
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gw_az1.nat_gateway_id }}"
        associations:
          - subnet_id: "{{ private_subnet_az1.results[0].subnet.id }}"

    - name: Create Route Table for Private Subnets in AZ2
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gw_az2.nat_gateway_id }}"
        associations:
          - subnet_id: "{{ private_subnet_az2.results[0].subnet.id }}"

    - name: Create Security Group for Bastion Host
      amazon.aws.ec2_group:
        name: bastion-sg
        description: Security group for Bastion Host
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
        state: present
      register: bastion_sg

    - name: Launch Bastion Host in Public Subnet AZ1
      amazon.aws.ec2_instance:
        name: bastion-host
        key_name: your_key_pair
        instance_type: t2.micro
        image_id: ami-xxxxxxxxx
        region: "{{ region }}"
        vpc_subnet_id: "{{ public_subnet_az1.results[0].subnet.id }}"
        group_id: "{{ bastion_sg.group_id }}"
        wait: yes
      register: bastion_host
